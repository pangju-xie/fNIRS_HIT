# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'display.ui'
#
# Created by: PyQt5 UI code generator 5.15.11
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1200, 850)
        MainWindow.setMinimumSize(QtCore.QSize(1000, 700))
        
        # Set application style
        MainWindow.setStyleSheet("""
            QMainWindow {
                background-color: #f5f5f5;
            }
            QGroupBox {
                font-weight: bold;
                font-size: 11px;
                border: 2px solid #cccccc;
                border-radius: 5px;
                margin-top: 10px;
                padding-top: 10px;
            }
            QGroupBox::title {
                subcontrol-origin: margin;
                left: 10px;
                padding: 0 5px 0 5px;
            }
            QPushButton {
                background-color: #4CAF50;
                border: none;
                color: white;
                padding: 8px 16px;
                text-align: center;
                text-decoration: none;
                display: inline-block;
                font-size: 12px;
                border-radius: 4px;
            }
            QPushButton:hover {
                background-color: #45a049;
            }
            QPushButton:pressed {
                background-color: #3d8b40;
            }
            QPushButton:disabled {
                background-color: #cccccc;
                color: #666666;
            }
            QComboBox, QLineEdit, QSpinBox, QDoubleSpinBox {
                padding: 4px;
                border: 1px solid #ccc;
                border-radius: 3px;
                font-size: 11px;
            }
            QLabel {
                font-size: 11px;
                color: #333;
            }
        """)
        
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        
        # Main layout
        self.mainLayout = QtWidgets.QVBoxLayout(self.centralwidget)
        self.mainLayout.setContentsMargins(15, 15, 15, 15)
        self.mainLayout.setSpacing(10)
        self.mainLayout.setObjectName("mainLayout")
        
        # Control panel
        self.controlGroup = QtWidgets.QGroupBox(self.centralwidget)
        self.controlGroup.setMaximumHeight(60)
        self.controlGroup.setObjectName("controlGroup")
        self.controlLayout = QtWidgets.QHBoxLayout(self.controlGroup)
        self.controlLayout.setObjectName("controlLayout")
        
        # Control buttons
        self.startButton = QtWidgets.QPushButton(self.controlGroup)
        self.startButton.setMinimumSize(QtCore.QSize(100, 35))
        self.startButton.setObjectName("startButton")
        self.controlLayout.addWidget(self.startButton)
        
        self.resetButton = QtWidgets.QPushButton(self.controlGroup)
        self.resetButton.setMinimumSize(QtCore.QSize(100, 35))
        self.resetButton.setObjectName("resetButton")
        self.controlLayout.addWidget(self.resetButton)
        
        self.recordButton = QtWidgets.QPushButton(self.controlGroup)
        self.recordButton.setMinimumSize(QtCore.QSize(100, 35))
        self.recordButton.setObjectName("recordButton")
        self.controlLayout.addWidget(self.recordButton)
        
        self.stopButton = QtWidgets.QPushButton(self.controlGroup)
        self.stopButton.setMinimumSize(QtCore.QSize(100, 35))
        self.stopButton.setObjectName("stopButton")
        self.controlLayout.addWidget(self.stopButton)
        
        self.saveButton = QtWidgets.QPushButton(self.controlGroup)
        self.saveButton.setMinimumSize(QtCore.QSize(100, 35))
        self.saveButton.setObjectName("saveButton")
        self.controlLayout.addWidget(self.saveButton)
        
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.controlLayout.addItem(spacerItem)
        
        self.mainLayout.addWidget(self.controlGroup)
        
        # Settings group
        self.settingsGroup = QtWidgets.QGroupBox(self.centralwidget)
        self.settingsGroup.setMaximumHeight(120)
        self.settingsGroup.setObjectName("settingsGroup")
        self.settingsLayout = QtWidgets.QHBoxLayout(self.settingsGroup)
        self.settingsLayout.setObjectName("settingsLayout")
        
        # Signal type selection
        self.signalLayout = QtWidgets.QVBoxLayout()
        self.signalLayout.setObjectName("signalLayout")
        
        self.signalTypeLabel = QtWidgets.QLabel(self.settingsGroup)
        self.signalTypeLabel.setObjectName("signalTypeLabel")
        self.signalLayout.addWidget(self.signalTypeLabel)
        
        self.signalTypeCombo = QtWidgets.QComboBox(self.settingsGroup)
        self.signalTypeCombo.setMinimumSize(QtCore.QSize(150, 25))
        self.signalTypeCombo.setObjectName("signalTypeCombo")
        self.signalTypeCombo.addItem("")
        self.signalTypeCombo.addItem("")
        self.signalTypeCombo.addItem("")
        self.signalLayout.addWidget(self.signalTypeCombo)
        
        self.settingsLayout.addLayout(self.signalLayout)
        
        # Filter type selection
        self.filterLayout = QtWidgets.QVBoxLayout()
        self.filterLayout.setObjectName("filterLayout")
        
        self.filterLabel = QtWidgets.QLabel(self.settingsGroup)
        self.filterLabel.setObjectName("filterLabel")
        self.filterLayout.addWidget(self.filterLabel)
        
        self.filterTypeCombo = QtWidgets.QComboBox(self.settingsGroup)
        self.filterTypeCombo.setMinimumSize(QtCore.QSize(120, 25))
        self.filterTypeCombo.setObjectName("filterTypeCombo")
        self.filterTypeCombo.addItem("")
        self.filterTypeCombo.addItem("")
        self.filterTypeCombo.addItem("")
        self.filterTypeCombo.addItem("")
        self.filterLayout.addWidget(self.filterTypeCombo)
        
        self.settingsLayout.addLayout(self.filterLayout)
        
        # S-G Filter settings
        self.sgFilterGroup = QtWidgets.QGroupBox(self.settingsGroup)
        self.sgFilterGroup.setMinimumSize(QtCore.QSize(250, 80))
        self.sgFilterGroup.setVisible(False)  # Initially hidden
        self.sgFilterGroup.setObjectName("sgFilterGroup")
        self.sgLayout = QtWidgets.QHBoxLayout(self.sgFilterGroup)
        self.sgLayout.setObjectName("sgLayout")
        
        self.windowLabel = QtWidgets.QLabel(self.sgFilterGroup)
        self.windowLabel.setObjectName("windowLabel")
        self.sgLayout.addWidget(self.windowLabel)
        
        self.windowSpinBox = QtWidgets.QSpinBox(self.sgFilterGroup)
        self.windowSpinBox.setMinimum(3)
        self.windowSpinBox.setMaximum(101)
        self.windowSpinBox.setSingleStep(2)
        self.windowSpinBox.setValue(11)
        self.windowSpinBox.setObjectName("windowSpinBox")
        self.sgLayout.addWidget(self.windowSpinBox)
        
        self.polyOrderLabel = QtWidgets.QLabel(self.sgFilterGroup)
        self.polyOrderLabel.setObjectName("polyOrderLabel")
        self.sgLayout.addWidget(self.polyOrderLabel)
        
        self.polyOrderSpinBox = QtWidgets.QSpinBox(self.sgFilterGroup)
        self.polyOrderSpinBox.setMinimum(1)
        self.polyOrderSpinBox.setMaximum(5)
        self.polyOrderSpinBox.setValue(3)
        self.polyOrderSpinBox.setObjectName("polyOrderSpinBox")
        self.sgLayout.addWidget(self.polyOrderSpinBox)
        
        self.sgApplyButton = QtWidgets.QPushButton(self.sgFilterGroup)
        self.sgApplyButton.setMaximumSize(QtCore.QSize(80, 30))
        self.sgApplyButton.setObjectName("sgApplyButton")
        self.sgLayout.addWidget(self.sgApplyButton)
        
        self.settingsLayout.addWidget(self.sgFilterGroup)
        
        # Butterworth filter settings
        self.butterworthGroup = QtWidgets.QGroupBox(self.settingsGroup)
        self.butterworthGroup.setMinimumSize(QtCore.QSize(400, 80))
        self.butterworthGroup.setVisible(False)  # Initially hidden
        self.butterworthGroup.setObjectName("butterworthGroup")
        self.butterworthLayout = QtWidgets.QHBoxLayout(self.butterworthGroup)
        self.butterworthLayout.setObjectName("butterworthLayout")
        
        self.lowCutoffLabel = QtWidgets.QLabel(self.butterworthGroup)
        self.lowCutoffLabel.setObjectName("lowCutoffLabel")
        self.butterworthLayout.addWidget(self.lowCutoffLabel)
        
        self.lowCutoffEdit = QtWidgets.QLineEdit(self.butterworthGroup)
        self.lowCutoffEdit.setMaximumSize(QtCore.QSize(50, 25))
        self.lowCutoffEdit.setObjectName("lowCutoffEdit")
        self.butterworthLayout.addWidget(self.lowCutoffEdit)
        
        self.highCutoffLabel = QtWidgets.QLabel(self.butterworthGroup)
        self.highCutoffLabel.setObjectName("highCutoffLabel")
        self.butterworthLayout.addWidget(self.highCutoffLabel)
        
        self.highCutoffEdit = QtWidgets.QLineEdit(self.butterworthGroup)
        self.highCutoffEdit.setMaximumSize(QtCore.QSize(50, 25))
        self.highCutoffEdit.setObjectName("highCutoffEdit")
        self.butterworthLayout.addWidget(self.highCutoffEdit)
        
        self.orderLabel = QtWidgets.QLabel(self.butterworthGroup)
        self.orderLabel.setObjectName("orderLabel")
        self.butterworthLayout.addWidget(self.orderLabel)
        
        self.orderSpinBox = QtWidgets.QSpinBox(self.butterworthGroup)
        self.orderSpinBox.setMinimum(1)
        self.orderSpinBox.setMaximum(10)
        self.orderSpinBox.setValue(4)
        self.orderSpinBox.setObjectName("orderSpinBox")
        self.butterworthLayout.addWidget(self.orderSpinBox)
        
        self.butterworthApplyButton = QtWidgets.QPushButton(self.butterworthGroup)
        self.butterworthApplyButton.setMaximumSize(QtCore.QSize(80, 30))
        self.butterworthApplyButton.setObjectName("butterworthApplyButton")
        self.butterworthLayout.addWidget(self.butterworthApplyButton)
        
        self.settingsLayout.addWidget(self.butterworthGroup)
        
        self.mainLayout.addWidget(self.settingsGroup)
        
        # Plot group
        self.plotGroup = QtWidgets.QGroupBox(self.centralwidget)
        self.plotGroup.setObjectName("plotGroup")
        self.plotLayout = QtWidgets.QVBoxLayout(self.plotGroup)
        self.plotLayout.setSpacing(5)
        self.plotLayout.setObjectName("plotLayout")
        
        # Plot control layout
        self.plotControlLayout = QtWidgets.QHBoxLayout()
        self.plotControlLayout.setObjectName("plotControlLayout")
        
        self.channelOffsetLabel = QtWidgets.QLabel(self.plotGroup)
        self.channelOffsetLabel.setObjectName("channelOffsetLabel")
        self.plotControlLayout.addWidget(self.channelOffsetLabel)
        
        self.channelOffsetSpinBox = QtWidgets.QDoubleSpinBox(self.plotGroup)
        self.channelOffsetSpinBox.setMinimum(0.0)
        self.channelOffsetSpinBox.setMaximum(10.0)
        self.channelOffsetSpinBox.setSingleStep(0.1)
        self.channelOffsetSpinBox.setValue(0.5)
        self.channelOffsetSpinBox.setObjectName("channelOffsetSpinBox")
        self.plotControlLayout.addWidget(self.channelOffsetSpinBox)
        
        spacerItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.plotControlLayout.addItem(spacerItem1)
        
        self.clearPlotButton = QtWidgets.QPushButton(self.plotGroup)
        self.clearPlotButton.setMaximumSize(QtCore.QSize(100, 30))
        self.clearPlotButton.setObjectName("clearPlotButton")
        self.plotControlLayout.addWidget(self.clearPlotButton)
        
        self.plotLayout.addLayout(self.plotControlLayout)
        
        # Plot widget placeholder
        self.plotWidget = QtWidgets.QWidget(self.plotGroup)
        self.plotWidget.setMinimumSize(QtCore.QSize(0, 500))
        self.plotWidget.setObjectName("plotWidget")
        self.plotLayout.addWidget(self.plotWidget)
        
        self.mainLayout.addWidget(self.plotGroup)
        
        MainWindow.setCentralWidget(self.centralwidget)
        
        # Menu bar
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1200, 22))
        self.menubar.setObjectName("menubar")
        
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        self.menuView = QtWidgets.QMenu(self.menubar)
        self.menuView.setObjectName("menuView")
        
        MainWindow.setMenuBar(self.menubar)
        
        # Status bar
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        
        # Actions
        self.actionOpen = QtWidgets.QAction(MainWindow)
        self.actionOpen.setObjectName("actionOpen")
        self.actionSave = QtWidgets.QAction(MainWindow)
        self.actionSave.setObjectName("actionSave")
        self.actionExport = QtWidgets.QAction(MainWindow)
        self.actionExport.setObjectName("actionExport")
        self.actionExit = QtWidgets.QAction(MainWindow)
        self.actionExit.setObjectName("actionExit")
        self.actionZoomIn = QtWidgets.QAction(MainWindow)
        self.actionZoomIn.setObjectName("actionZoomIn")
        self.actionZoomOut = QtWidgets.QAction(MainWindow)
        self.actionZoomOut.setObjectName("actionZoomOut")
        self.actionResetZoom = QtWidgets.QAction(MainWindow)
        self.actionResetZoom.setObjectName("actionResetZoom")
        
        # Add actions to menus
        self.menuFile.addAction(self.actionOpen)
        self.menuFile.addAction(self.actionSave)
        self.menuFile.addAction(self.actionExport)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionExit)
        
        self.menuView.addAction(self.actionZoomIn)
        self.menuView.addAction(self.actionZoomOut)
        self.menuView.addAction(self.actionResetZoom)
        
        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuView.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Signal Processing and Data Visualization"))
        
        # Control panel
        self.controlGroup.setTitle(_translate("MainWindow", "Control Panel"))
        self.startButton.setText(_translate("MainWindow", "Start (开始)"))
        self.resetButton.setText(_translate("MainWindow", "Reset (复位)"))
        self.recordButton.setText(_translate("MainWindow", "Record (记录)"))
        self.stopButton.setText(_translate("MainWindow", "Stop (停止)"))
        self.saveButton.setText(_translate("MainWindow", "Save (保存)"))
        
        # Settings panel
        self.settingsGroup.setTitle(_translate("MainWindow", "Signal Processing Settings"))
        self.signalTypeLabel.setText(_translate("MainWindow", "Signal Type (信号类型):"))
        self.signalTypeCombo.setItemText(0, _translate("MainWindow", "Raw Light Intensity (原始光强)"))
        self.signalTypeCombo.setItemText(1, _translate("MainWindow", "Optical Density (光密度OD)"))
        self.signalTypeCombo.setItemText(2, _translate("MainWindow", "Hemoglobin Concentration (血红蛋白浓度)"))
        
        self.filterLabel.setText(_translate("MainWindow", "Filter Type (滤波):"))
        self.filterTypeCombo.setItemText(0, _translate("MainWindow", "No Filter (不滤波)"))
        self.filterTypeCombo.setItemText(1, _translate("MainWindow", "S-G Filter (S-G滤波)"))
        self.filterTypeCombo.setItemText(2, _translate("MainWindow", "Butterworth Filter (Butterworth滤波)"))
        self.filterTypeCombo.setItemText(3, _translate("MainWindow", "Smooth Filter (平滑滤波)"))
        
        # Filter settings
        self.sgFilterGroup.setTitle(_translate("MainWindow", "S-G Filter Settings"))
        self.windowLabel.setText(_translate("MainWindow", "Window (窗口值):"))
        self.polyOrderLabel.setText(_translate("MainWindow", "Poly Order (多项式阶数):"))
        self.sgApplyButton.setText(_translate("MainWindow", "Apply (完成)"))
        
        self.butterworthGroup.setTitle(_translate("MainWindow", "Butterworth Filter Settings"))
        self.lowCutoffLabel.setText(_translate("MainWindow", "Low Cutoff (下截止频率):"))
        self.lowCutoffEdit.setText(_translate("MainWindow", "0.01"))
        self.highCutoffLabel.setText(_translate("MainWindow", "High Cutoff (上截止频率):"))
        self.highCutoffEdit.setText(_translate("MainWindow", "0.1"))
        self.orderLabel.setText(_translate("MainWindow", "Order (阶数):"))
        self.butterworthApplyButton.setText(_translate("MainWindow", "Apply (完成)"))
        
        # Plot panel
        self.plotGroup.setTitle(_translate("MainWindow", "Data Visualization"))
        self.channelOffsetLabel.setText(_translate("MainWindow", "Channel Offset:"))
        self.clearPlotButton.setText(_translate("MainWindow", "Clear Plot"))
        
        # Menu items
        self.menuFile.setTitle(_translate("MainWindow", "File"))
        self.menuView.setTitle(_translate("MainWindow", "View"))
        
        # Actions
        self.actionOpen.setText(_translate("MainWindow", "Open"))
        self.actionSave.setText(_translate("MainWindow", "Save"))
        self.actionExport.setText(_translate("MainWindow", "Export"))
        self.actionExit.setText(_translate("MainWindow", "Exit"))
        self.actionZoomIn.setText(_translate("MainWindow", "Zoom In"))
        self.actionZoomOut.setText(_translate("MainWindow", "Zoom Out"))
        self.actionResetZoom.setText(_translate("MainWindow", "Reset Zoom"))

        # Additional UI setup
        self.setup_additional_properties()

    def setup_additional_properties(self):
        """Setup additional properties and connections"""
        # Set tooltips for better user experience
        self.startButton.setToolTip("Start data acquisition")
        self.stopButton.setToolTip("Stop data acquisition")
        self.resetButton.setToolTip("Reset system and clear all data")
        self.recordButton.setToolTip("Toggle data recording")
        self.saveButton.setToolTip("Save recorded data to file")
        
        self.signalTypeCombo.setToolTip("Select signal type for processing")
        self.filterTypeCombo.setToolTip("Choose filter method")
        
        self.windowSpinBox.setToolTip("Window size for Savitzky-Golay filter (must be odd)")
        self.lowCutoffEdit.setToolTip("Lower cutoff frequency in Hz")
        self.highCutoffEdit.setToolTip("Upper cutoff frequency in Hz")
        self.orderSpinBox.setToolTip("Filter order (higher = steeper cutoff)")
        
        self.channelOffsetSpinBox.setToolTip("Vertical offset between channels")
        self.clearPlotButton.setToolTip("Clear all plotted data")
        
        # Set focus policy for better keyboard navigation
        self.startButton.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.stopButton.setFocusPolicy(QtCore.Qt.StrongFocus)
        
        # Set default values and ranges
        self.windowSpinBox.setToolTip("Window must be odd number")
        self.channelOffsetSpinBox.setDecimals(2)
        self.channelOffsetSpinBox.setSuffix(" units")
        
        # Enable/disable initial states
        self.stopButton.setEnabled(False)
        self.sgFilterGroup.setVisible(False)
        self.butterworthGroup.setVisible(False)

    def setup_keyboard_shortcuts(self, MainWindow):
        """Setup keyboard shortcuts for common actions"""
        self.actionOpen.setShortcut(QtGui.QKeySequence.Open)
        self.actionSave.setShortcut(QtGui.QKeySequence.Save)
        self.actionExit.setShortcut(QtGui.QKeySequence.Quit)
        
        # Custom shortcuts
        self.startButton.setShortcut(QtGui.QKeySequence("Ctrl+R"))
        self.stopButton.setShortcut(QtGui.QKeySequence("Ctrl+T"))
        self.resetButton.setShortcut(QtGui.QKeySequence("Ctrl+Shift+R"))
        
        # Zoom shortcuts
        self.actionZoomIn.setShortcut(QtGui.QKeySequence.ZoomIn)
        self.actionZoomOut.setShortcut(QtGui.QKeySequence.ZoomOut)
        
        # Update tooltips to include shortcuts
        self.startButton.setToolTip("Start data acquisition (Ctrl+R)")
        self.stopButton.setToolTip("Stop data acquisition (Ctrl+T)")
        self.resetButton.setToolTip("Reset system and clear all data (Ctrl+Shift+R)")

    def apply_theme(self, theme="default"):
        """Apply different visual themes"""
        if theme == "dark":
            dark_style = """
                QMainWindow {
                    background-color: #2b2b2b;
                    color: #ffffff;
                }
                QGroupBox {
                    font-weight: bold;
                    font-size: 11px;
                    border: 2px solid #555555;
                    border-radius: 5px;
                    margin-top: 10px;
                    padding-top: 10px;
                    background-color: #3c3c3c;
                    color: #ffffff;
                }
                QGroupBox::title {
                    subcontrol-origin: margin;
                    left: 10px;
                    padding: 0 5px 0 5px;
                    color: #ffffff;
                }
                QPushButton {
                    background-color: #0078d4;
                    border: none;
                    color: white;
                    padding: 8px 16px;
                    text-align: center;
                    border-radius: 4px;
                    font-size: 12px;
                }
                QPushButton:hover {
                    background-color: #106ebe;
                }
                QPushButton:pressed {
                    background-color: #005a9e;
                }
                QPushButton:disabled {
                    background-color: #666666;
                    color: #999999;
                }
                QComboBox, QLineEdit, QSpinBox, QDoubleSpinBox {
                    padding: 4px;
                    border: 1px solid #555555;
                    border-radius: 3px;
                    font-size: 11px;
                    background-color: #404040;
                    color: #ffffff;
                }
                QLabel {
                    font-size: 11px;
                    color: #ffffff;
                }
                QMenuBar {
                    background-color: #2b2b2b;
                    color: #ffffff;
                }
                QStatusBar {
                    background-color: #2b2b2b;
                    color: #ffffff;
                }
            """
            return dark_style
        else:
            # Return default light theme
            return """
                QMainWindow {
                    background-color: #f5f5f5;
                }
                QGroupBox {
                    font-weight: bold;
                    font-size: 11px;
                    border: 2px solid #cccccc;
                    border-radius: 5px;
                    margin-top: 10px;
                    padding-top: 10px;
                }
                QGroupBox::title {
                    subcontrol-origin: margin;
                    left: 10px;
                    padding: 0 5px 0 5px;
                }
                QPushButton {
                    background-color: #4CAF50;
                    border: none;
                    color: white;
                    padding: 8px 16px;
                    text-align: center;
                    text-decoration: none;
                    display: inline-block;
                    font-size: 12px;
                    border-radius: 4px;
                }
                QPushButton:hover {
                    background-color: #45a049;
                }
                QPushButton:pressed {
                    background-color: #3d8b40;
                }
                QPushButton:disabled {
                    background-color: #cccccc;
                    color: #666666;
                }
                QComboBox, QLineEdit, QSpinBox, QDoubleSpinBox {
                    padding: 4px;
                    border: 1px solid #ccc;
                    border-radius: 3px;
                    font-size: 11px;
                }
                QLabel {
                    font-size: 11px;
                    color: #333;
                }
            """


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    
    # Setup additional features
    ui.setup_keyboard_shortcuts(MainWindow)
    
    # Apply default theme (can be changed to "dark" for dark theme)
    MainWindow.setStyleSheet(ui.apply_theme("default"))
    
    MainWindow.show()
    sys.exit(app.exec_())